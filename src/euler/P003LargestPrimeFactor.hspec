import Test.Hspec
import Test.QuickCheck
import Control.Exception (evaluate)
import P003LargestPrimeFactor

main :: IO ()
main = hspec $ do
	describe "f" $ do
		

	describe "primefactor" $ do
		it "works 1" $ do
			primefactor 1 `shouldBe` 1
		it "works 2" $ do
			primefactor 2 `shouldBe` 2
		it "works 3" $ do
			primefactor 3 `shouldBe` 3
		it "works 4" $ do
			primefactor 4 `shouldBe` 2
		it "works 5" $ do
			primefactor 5 `shouldBe` 5
		it "works 6" $ do
			primefactor 6 `shouldBe` 3
		it "works 7" $ do
			primefactor 7 `shouldBe` 7
		it "works 8" $ do
			primefactor 8 `shouldBe` 2
		it "works 9" $ do
			primefactor 9 `shouldBe` 3
		it "works 10" $ do
			primefactor 10 `shouldBe` 5
		it "works 11" $ do
			primefactor 11 `shouldBe` 11
		it "works 12" $ do
			primefactor 12 `shouldBe` 3
		it "works 13" $ do
			primefactor 13 `shouldBe` 13
		it "works 14" $ do
			primefactor 14 `shouldBe` 7
		it "works 15" $ do
			primefactor 15 `shouldBe` 5
		it "works 16" $ do
			primefactor 16 `shouldBe` 2
		it "works 17" $ do
			primefactor 17 `shouldBe` 17
		it "works 18" $ do
			primefactor 18 `shouldBe` 3
		it "works 19" $ do
			primefactor 19 `shouldBe` 19
		it "works 20" $ do
			primefactor 20 `shouldBe` 5
		it "works 21" $ do
			primefactor 21 `shouldBe` 7
